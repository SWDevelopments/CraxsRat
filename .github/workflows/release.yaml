name: Release CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Which Windows version to build (v6 or v7)'
        required: true
        default: 'v7'

jobs:
  build-windows:
    name: Build Windows GUI (${{ github.event.inputs.version }})
    runs-on: windows-latest
    env:
      CONFIGURATION: Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.0

      - name: Determine solution file
        id: vars
        run: |
          if [[ "${{ github.event.inputs.version }}" == "v6" ]]; then
            echo "solution=craxsrat_v6.sln" >> $GITHUB_OUTPUT
            echo "folder=v6" >> $GITHUB_OUTPUT
            echo "zip=craxsrat-v6.zip" >> $GITHUB_OUTPUT
          else
            echo "solution=craxsrat_v7.sln" >> $GITHUB_OUTPUT
            echo "folder=v7" >> $GITHUB_OUTPUT
            echo "zip=craxsrat-v7.zip" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: '7.0.x'
          include-prerelease: false

      - name: Restore dependencies
        run: dotnet restore ${{ steps.vars.outputs.solution }}

      - name: Build solution
        run: dotnet build ${{ steps.vars.outputs.solution }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Publish app
        run: |
          dotnet publish ${{ steps.vars.outputs.solution }} \
            --configuration ${{ env.CONFIGURATION }} \
            --output publish/${{ steps.vars.outputs.folder }} \
            --no-build

      - name: Zip build
        run: |
          Compress-Archive -Path publish/${{ steps.vars.outputs.folder }}/* -DestinationPath ${{ steps.vars.outputs.zip }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ github.event.inputs.version }}
          path: ${{ steps.vars.outputs.zip }}
